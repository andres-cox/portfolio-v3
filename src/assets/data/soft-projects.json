[
    {
        "subheadline": "Frontend Project",
        "headline": "Movies PWA",
        "description": "It's a website where you find movie recommentations its details and nominations",
        "image": "assets/images/moviesPwa.png",
        "technologies": [
            "Ionic",
            "TMDb API",
            "Wikipedia API",
            "JustWatch API"
        ],
        "github": "http:dasd",
        "website": "http:web",
        "details": {
            "title": "Discover Movies Details",
            "summary": "I made this app for my self, I wanted to have all movies data in my hand and get its information as easy as posible. I always had to look for movies by my self, looking in webpages and youtube videos. But those often weren't good enough for me. So I created this app in order to find movies easely. Looking for movies by actor and check if they have awards and nominations. I also wanted to check if they were available in streaming platforms for that I use Justwatch API but unfortunatly we can use it only in local do to its CORS policy.",
            "images": [
                "assets/management-app/home.png",
                "assets/management-app/employees-list.png",
                "assets/management-app/assignments.png",
                "assets/management-app/auth-passed.png",
                "assets/management-app/remove-employee.png"
            ],
            "cards": [
                {
                    "subtitle": "Tabs Design",
                    "text": "I only wanted to have three tabs. Home tab is the welcome page in which we have the search bar, popular movies, tvshows and recomendations, these last one appear once we checked our favorite ones and it's based in TMDB api system. Discovery tab would be a place to find the most popular movies by year and genre. And the last tab for our personal list for movies. The ones we have seen, favorites and to watch.",
                    "image": "assets/images/moviesPwa.png"
                },
                {
                    "subtitle": "The Movie Database API",
                    "text": "This API is very popular it's used in many other sides, so I wanted to try it as well. When I checked its documentation I saw that it was very organized and it had most of the functionality I was looking for, movie details, recomendations, actor movies and so on. Then I realized that it hasn't have actor's tvshows as a basic query so I had to implement a search query, that has its disadvantage, because the response isn't quite clean and I had to make some filters in order to have the results I was expecting. I finished all the app based in just this API, then I wanted to move forward to implement nominations details and streaming availability that this API don't offer.",
                    "image": "assets/images/moviesPwa.png"
                },
                {
                    "subtitle": "Wikipedia API",
                    "text": "Once we have seen an organized API, Wikipedia give me some good hours to study, this API is very complex. Before this API I was looking for a more specific API for movie nominations but I couldn't find a good one. So I decided to use Wikipedia because is like an open encyclopedia, and maybe it'll be usefull for another future project. When I look more deep into it, I saw that it has multiple queries and it hasn't have as good examples as I wanted, but well it's just a new tool to learn so I studied all its options and finally I could create the query I wanted, the one that returns movie nominations. But it's not as clean as I would like, because in order to exact table of a movie page I have to request two queries. One for seeking nominations section and the other to extract the html of that table, there is a way to do it in just one query but now it comes the second problem, I look for movie queries based in its title (tmdb title) because there isn't id relation, so we have the title and it works for most of the movies, but for those that don't, we have to create another query, you can see in the image the queries I had to create in order to have most of the movies nominations details. I still think it's not a clean solution but it works, and that is all I wanted.",
                    "image": "assets/images/moviesPwa.png"
                }
            ],
            "conclusion": "This was a very cool app I use it all the time, and because of that I improve it every day"
        }
    },
    {
        "subheadline": "Frontend & Backend Project",
        "headline": "Managament Web",
        "description": "It's an administration website in which you can see all employees data and what projects they are in.",
        "image": "assets/images/managementWeb.png",
        "technologies": [
            "Angular",
            "Bootstrap",
            "GraphQL",
            "NodeJS",
            "Mongo",
            "Docker"
        ],
        "github": "http:dasd",
        "website": "http:web"
    },
    {
        "subheadline": "Frontend Project",
        "headline": "Turism Web",
        "description": "It's an informative page of Tarija in which you get informed of some places of the city.",
        "image": "assets/images/turismWeb.png",
        "technologies": [
            "Angular",
            "SCSS",
            "ngx-translate"
        ],
        "github": "http:dasd",
        "website": "http:web"
    },
    {
        "subheadline": "Frontend Project",
        "headline": "News PWA",
        "description": "An informative page where you find news from other countries",
        "image": "assets/images/newsPwa.png",
        "technologies": [
            "Ionic",
            "News API"
        ],
        "github": "http:dasd",
        "website": "http:web"
    },
    {
        "subheadline": "Backend Project",
        "headline": "E-commerce Web",
        "description": "Basic e-commerce page with few products",
        "image": "assets/images/ecommerceWeb.png",
        "technologies": [
            "Laravel",
            "Bootstrap",
            "MySQL"
        ],
        "github": "http:dasd",
        "website": "http:web"
    }
]